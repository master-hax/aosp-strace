{
  "comments": [
    {
      "key": {
        "uuid": "993733c3_8cf98768",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-16T16:07:47Z",
      "side": 1,
      "message": "can we just pull out the stat-specific bit for now, and worry about that when we have an upstream stat test?\n\n(i actually wonder whether we should move this testing stuff into a script and just call the script from the makefile. btu we can do that another time.)\n\non the broader subject of testing, one thing i was thinking of was a single \"syscall\" binary that parses its arguments and makes a syscall. so you can say something like:\n\n  syscall SYS_epoll_ctl -1 EPOLL_CTL_DEL -1 NULL\n\nand check the output. obvious problems: how do you translate the constants? (or is this still useful without the constants? note that you can\u0027t just hardcode 2 or whatever if you want to work on all architectures. even with just the architectures we support, mips has a lot of differences.) how do you test non-failure cases where you need to supply real arguments? it\u0027s easy to imagine passing string arguments, but how would you do structs?\n\nstill, it would be interesting to think about the tests we could write with this and whether even if they only solve a tiny part of the test problem they\u0027d still be useful. probably better brought up on the strace-devel mailing list rather than here though...",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a51a0b65_f6115e74",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-17T18:59:15Z",
      "side": 1,
      "message": "this could be interested though I don\u0027t have any good answers to the issues that you mentioned...",
      "parentUuid": "993733c3_8cf98768",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59ee9b35_8ef8835d",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-15T19:09:12Z",
      "side": 1,
      "message": "Does this actually ever pass? Based on the stat test it looks like you\u0027re printing multiple lines and grepping them together file will probably not yield the result you expect.\n\nIn general, I wonder if this is good enough to test the trace. Wouldn\u0027t you want to check that a specific call was a made? is output matching enough?",
      "range": {
        "startLine": 90,
        "startChar": 4,
        "endLine": 90,
        "endChar": 64
      },
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19750377_3b60bf8f",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1011068
      },
      "writtenOn": "2014-04-16T05:00:06Z",
      "side": 1,
      "message": "Hi,\nthe test case for stat needs to check whether the stat/fstat output in strace is correct or not. So the stat test is trying to print the exactly same thing (strace-log-$*-output here) as strace it self does (One line in strace-log-$*).\n\nThe test passed on x86_64 emulator. I suppose it\u0027s enough for the stat testing. What I a not sure is whether the test case could work on ARM/ARM64/MIPS.",
      "parentUuid": "59ee9b35_8ef8835d",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59585b1a_cf961d39",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-16T10:58:11Z",
      "side": 1,
      "message": "Hmmm... I was actually thinking that the tests should verify the trace (well part of it). Checking just the output doesn\u0027t seem ideal as the trace itself could be different than the expected one. (i.e. looks to me that this tests that strace  runs the program correctly not that it produces the right trace).\n\nOnce the stat.c test is here I can help with verification on the other arch.",
      "parentUuid": "19750377_3b60bf8f",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c3cfc8_2a605b68",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-15T19:09:12Z",
      "side": 1,
      "message": "Why is this needed?",
      "range": {
        "startLine": 97,
        "startChar": 30,
        "endLine": 97,
        "endChar": 47
      },
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "994e5355_944b4af4",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1011068
      },
      "writtenOn": "2014-04-16T05:00:06Z",
      "side": 1,
      "message": "Let\u0027s take vfork as example. The test case will become strace-vfork32-test and strace-vfork64-test. While the result pattern is still vfork-expected-output. So we have two choice:\n1. split the expected pattern to vfork32-expected-output and vfork64-expected-output. Which I didn\u0027t chose. Because most test case expect same output for 32bit test and 64bit.\n2.  Use one expected pattern for 32/64bit test. So I need to filter out 32/64 in test case.",
      "parentUuid": "f9c3cfc8_2a605b68",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "393d679f_ceeb83cd",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-16T10:58:11Z",
      "side": 1,
      "message": "Thanks! I forgot about 32/64 addition.",
      "parentUuid": "994e5355_944b4af4",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59ee9b35_ee082fbf",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-04-15T19:09:12Z",
      "side": 1,
      "message": "Do we actually expect both (32 and 64) to pass on the same device?",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 16
      },
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19750377_1bbce398",
        "filename": "test/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1011068
      },
      "writtenOn": "2014-04-16T05:00:06Z",
      "side": 1,
      "message": "We expect both passed on 64bit environment. But we shouldn\u0027t run 64bit testing on 32bit environment.\n\nYes. The change need be updated. I will update it after I back to office.",
      "parentUuid": "59ee9b35_ee082fbf",
      "revId": "8ced122e0ec67d3244effb24f2f51cba6090c63f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}